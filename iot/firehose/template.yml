---
AWSTemplateFormatVersion: 2010-09-09
Description: AWS IoT Kinesis Firehose Stack

Parameters:
  IoTCertificateId:
    Type: String

Resources:
  IoTTing:
    Type: AWS::IoT::Thing
    Properties:
      ThingName: iot-firehose

  IoTPolicy:
    Type: AWS::IoT::Policy
    Properties:
      PolicyName: iot_firehose
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - iot:*
            Resource:
              - "*"

  IoTPolicyPrincipalAttachment:
    Type: AWS::IoT::PolicyPrincipalAttachment
    Properties:
      PolicyName: !Ref IoTPolicy
      Principal: !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:cert/${IoTCertificateId}

  IoTThingPrincipalAttachment:
    Type: AWS::IoT::ThingPrincipalAttachment
    Properties:
      ThingName: !Ref IoTTing
      Principal: !Sub arn:aws:iot:${AWS::Region}:${AWS::AccountId}:cert/${IoTCertificateId}

  IoTRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - iot.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /iot/firehose/
      Policies:
        - PolicyName: firehose-put-record
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - firehose:PutRecord
                  - firehose:PutRecordBatch
                Resource: !Sub arn:aws:firehose:${AWS::Region}:${AWS::AccountId}:deliverystream/*

  KinesisFirehoseRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - firehose.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess

  Bucket:
    Type: AWS::S3::Bucket

  KinesisFirehoseLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /${AWS::StackName}/kinesis-firehose

  KinesisFirehoseLogStream:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Ref KinesisFirehoseLogGroup
      LogStreamName: kinesis-firehose

  KinesisFirehose:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      S3DestinationConfiguration:
        RoleARN: !GetAtt KinesisFirehoseRole.Arn
        BucketARN: !GetAtt Bucket.Arn
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 5
        CloudWatchLoggingOptions:
          Enabled: true
          LogStreamName: !Ref KinesisFirehoseLogStream
          LogGroupName: !Ref KinesisFirehoseLogGroup
        CompressionFormat: UNCOMPRESSED
        Prefix: iot-kinesis

  IotTopicRule:
    Type: AWS::IoT::TopicRule
    Properties:
      RuleName: iot_firehose
      TopicRulePayload:
        RuleDisabled: false
        Sql: SELECT * FROM 'iot/firehose'
        Actions:
          - Firehose:
              DeliveryStreamName: !Ref KinesisFirehose
              RoleArn: !GetAtt IoTRole.Arn
              Separator: "\n"
